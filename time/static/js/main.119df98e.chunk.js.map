{"version":3,"sources":["icons/math.svg","utils.js","icons/literature.svg","game/actions/school.js","icons/atom.svg","icons/history.svg","icons/shield.svg","game/actions/training.js","icons/swords.svg","game/actions/research.js","icons/hourglass.svg","icons/brain.svg","icons/money.svg","icons/coffee.svg","icons/stocks.svg","game/actions/business.js","icons/cv.svg","game/actions/store.js","icons/time_backwards.svg","icons/sword.svg","icons/down.svg","icons/left.svg","icons/up.svg","icons/right.svg","game/board.js","game/actions/adventure.js","game/actions/index.js","game/main.js","components/Progress.jsx","components/Header.jsx","components/Title.jsx","components/AdventureMap.jsx","components/TrainingAttributes.jsx","components/ResearchDiscoveries.jsx","components/Equipment.jsx","components/Business.jsx","components/Schooling.jsx","components/CurrentDay.jsx","components/ActionBankColumn.jsx","components/ActionBank.jsx","components/PlanningItem.jsx","components/Planning.jsx","components/MainGame.jsx","App.js","reportWebVitals.js","index.js"],"names":["formatNumber","number","parseFloat","toFixed","actions","type","icon","MathIcon","isUnlocked","state","knowledge","math","unlockExplanation","science","LiteratureIcon","history","map","action","subject","explanation","act","elapsed","Math","pow","wisdom","showCumulativeEffects","startState","endState","startKnowledge","endKnowledge","startWisdom","endWisdom","equipment","sword","requires","ShieldIcon","shield","attr","success","attributes","skills","startAttr","endAttr","startSkills","endSkills","name","newProgress","researchProgress","researchTotals","steps","floor","startLevel","endLevel","finalPercentage","CoffeeIcon","career","money","salary","startMoney","endMoney","startSalary","endSalary","StocksIcon","instant","spent","invested","MoneyIcon","earned","max","timeLeft","startTime","endTime","unlocks","attack","defense","spaceTypes","getEffects","stats","enemyAttack","health","enemyHealth","newKnowledge","Object","keys","forEach","console","log","newHealth","min","used","remaining","time","map0","getNewSpace","i","j","createEnemy","createTreasure","createHealthSupply","createSpecial","newBoard","board","row","push","school","business","store","research","training","move","x","y","RightIcon","DownIcon","LeftIcon","UpIcon","direction","newSteps","adventure","stepsTaken","position","effects","boardSpot","actionEffects","spaceType","getActionEffects","newPosition","newPosition0","boardTracker","space","oldPosition","allActions","category","flat","actionMap","Map","unlockMap","effectsMap","doAction","get","showEffects","actionItem","effectsFunc","initEffects","endEffects","set","initialDay","actionIndex","Time","Memory","saveGame","localStorage","getItem","initialState","JSON","parse","day","currentDay","plan","settings","repeatLast","paused","newBoardTracker","newDay","nextDayKnowledge","totalTime","update","length","curAction","actionTimeLeft","investmentGains","newCareer","newUnlocks","setUnlocks","item","index","Progress","props","amt","total","label","showNumber","style","height","backgroundColor","width","display","float","top","bottom","left","right","textAlign","Header","className","Title","AdventureMap","getSpaceText","rowIndex","colIndex","spaceText","spot","getPlayerText","slice","reverse","rIndex","cell","TrainingAttributes","ResearchDiscoveries","Equipment","piece","Business","intern","getNext","log10","Schooling","next","nextWisdom","CurrentDay","dispatch","isActive","onChange","evt","repeat","target","checked","id","value","htmlFor","onClick","ActionBankColumn","firstUnlocked","disabled","onChooseAction","src","alt","ActionBank","PlanningItem","activity","setItemTime","initialDragState","draggedFrom","draggedTo","isDragging","originalOrder","updatedOrder","Planning","useState","dragAndDrop","setDragAndDrop","onDragStart","initPos","Number","currentTarget","dataset","onDragOver","preventDefault","newList","itemsDragged","remainingItems","filter","onDrop","onDragLeave","overflowX","flexGrow","paddingTop","draggable","newPlan","reducer","setItem","stringify","error","same","reduce","useInterval","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","MainGame","useReducer","prevTime","performance","now","newTime","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.119df98e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/math.57451d0c.svg\";","\nfunction formatNumber(number) {\n  return number ? parseFloat(number, 10).toFixed(3) : 0;\n}\n\nexport {formatNumber}\n","export default __webpack_public_path__ + \"static/media/literature.ad8faa2b.svg\";","import MathIcon from '../../icons/math.svg';\nimport {formatNumber} from '../../utils';\nimport LiteratureIcon from '../../icons/literature.svg';\nimport AtomIcon from '../../icons/atom.svg';\nimport HistoryIcon from '../../icons/history.svg';\n\nconst subjects = [{\n  type: \"math\",\n  icon: MathIcon,\n  isUnlocked: () => true,\n}, {\n  type: \"science\",\n  icon: AtomIcon,\n  isUnlocked: (state) => state.knowledge.math > 100,\n  unlockExplanation: `Reach 100 Math Knowledge to unlock`,\n}, {\n  type: \"history\",\n  icon: HistoryIcon,\n  isUnlocked: (state) => state.knowledge.science > 150,\n  unlockExplanation: `Reach 150 Science Knowledge to unlock`,\n}, {\n  type: \"literature\",\n  icon: LiteratureIcon,\n  isUnlocked: (state) => state.knowledge.history > 500,\n  unlockExplanation: `Reach 500 History Knowledge to unlock`,\n}];\n\nconst actions = subjects.map((action) => {\n  const subject = action.type;\n  return {\n    ...action,\n    explanation: `Study ${subject}.\n    Earn Knowledge: (1 + wisdom ^ .5)/s\n    Earn Wisdom: 1/s`,\n    act: (state, elapsed) => {\n      return {\n        knowledge: {\n          ...state.knowledge,\n          [subject]: (state.knowledge[subject] || 0) + (elapsed * (1 + Math.pow(state.wisdom[subject] || 0, .5))),\n        },\n        wisdom: {\n          ...state.wisdom,\n          [subject]: (state.wisdom[subject] || 0) + elapsed,\n        },\n      };\n    },\n    showCumulativeEffects: (startState, endState) => {\n      const startKnowledge = startState?.knowledge || {};\n      const endKnowledge = endState?.knowledge || {};\n      const startWisdom = startState?.wisdom || {};\n      const endWisdom = endState?.wisdom || {};\n      return `${subject} knowledge: ${formatNumber(startKnowledge[subject])} -> ${formatNumber(endKnowledge[subject])}\\n${subject} wisdom: ${formatNumber(startWisdom[subject])} -> ${formatNumber(endWisdom[subject])}`;\n    },\n  }\n});\n\nexport default actions;\n","export default __webpack_public_path__ + \"static/media/atom.e5a95f42.svg\";","export default __webpack_public_path__ + \"static/media/history.e804b387.svg\";","export default __webpack_public_path__ + \"static/media/shield.6f1c88ce.svg\";","//import HealthIcon from '../../icons/health.svg';\nimport ShieldIcon from '../../icons/shield.svg';\nimport SwordsIcon from '../../icons/swords.svg';\n\nconst attributes = [{\n  type: 'attack',\n  icon: SwordsIcon,\n  unlockExplanation: \"Buy a sword to unlock.\",\n  isUnlocked: (state) => state.equipment.sword > 0,\n  requires: \"sword\"\n}, {\n  type: 'defense',\n  icon: ShieldIcon,\n  unlockExplanation: \"Buy a shield to unlock.\",\n  isUnlocked: (state) => state.equipment.shield > 0,\n  requires: \"shield\",\n}];\n\nconst actions = attributes.map((action) => {\n  const attr = action.type;\n  return {\n    ...action,\n    explanation: `Train ${attr}.\n    Earn Attributes: ((1 + skill) ^ .5)/s\n    Earn Skill: .1/s\n    Requires ${action.requires}`,\n    act: (state, elapsed) => {\n      if (!state.equipment[action.requires]) {\n        return {success: false};\n      }\n      return {\n        success: true,\n        attributes: {\n          ...state.attributes,\n          [attr]: (state.attributes[attr] || 0) + (elapsed * (Math.pow(1 + (state.skills[attr] || 0), .5))),\n        },\n        skills: {\n          ...state.skills,\n          [attr]: (state.skills[attr] || 0) + elapsed / 10,\n        },\n      }\n    },\n    showCumulativeEffects: (startState, endState) => {\n      if (!startState) {\n        return \"\";\n      }\n      if (!startState.success) {\n        return \"Need to purchase a sword first\";\n      }\n      const startAttr = (startState?.attributes || {})[attr];\n      const endAttr = (endState?.attributes || {})[attr];\n      const startSkills = (startState?.skills || {})[attr];\n      const endSkills = (endState?.skills || {})[attr];\n      return `${attr}: ${startAttr} -> ${endAttr}\\nSkill: ${startSkills} -> ${endSkills}`;\n    },\n  }\n});\n\nexport default actions;\n","export default __webpack_public_path__ + \"static/media/swords.70ba0c4f.svg\";","import HourglassIcon from '../../icons/hourglass.svg';\nimport BrainIcon from '../../icons/brain.svg';\n\nconst subjects = [{\n  type: \"Research Time\",\n  name: \"Time\",\n  icon: HourglassIcon,\n  // TODO (idea): make it so this (all researches) only works for next run only?\n  explanation: `Study Time.\n  Every level unlocked add 1s to initial time.\n  Progress (Science Knowledge / (10 ^ level))%/s`,\n  unlockExplanation: \"Reach 50 science knowledge to unlock\",\n  isUnlocked: (state) => state.knowledge.science > 50,\n}, {\n  type: \"Research Memory\",\n  name: \"Memory\",\n  icon: BrainIcon,\n  explanation: `Study Memory.\n  Every level unlocked saves 1% of knowledge at the end of the day.\n  Progress ((Science Knowledge + History Knowledge) / 5) / (10 ^ nextLevel)%/s`,\n  unlockExplanation: \"Reach 250 science and 100 history to unlock\",\n  isUnlocked: (state) => state.knowledge.science >= 100 && state.knowledge.history >= 50,\n}]\n\nconst actions = subjects.map((action) => {\n  return {\n    ...action,\n    act: (state, elapsed) => {\n      const newProgress = (state.researchProgress[action.name] || 0) + elapsed * (state.knowledge.science || 0) / Math.pow(10, (state.researchTotals[action.name] || 0) + 1);\n      const steps = Math.floor(newProgress) - Math.floor(state.researchProgress[action.name] || 0);\n      return {\n        researchProgress: {\n          ...state.researchProgress,\n          [action.name]: newProgress,\n        },\n        researchTotals: {\n          ...state.researchTotals,\n          [action.name]: (state.researchTotals[action.name] || 0) + steps,\n        }\n      }\n    },\n    showCumulativeEffects: (startState, endState) => {\n      const startLevel = (startState?.researchTotals || {})[action.name] || 0;\n      const endLevel = (endState?.researchTotals || {})[action.name] || 0;\n      const finalPercentage = (endState?.researchProgress || {})[action.name] || 0;\n      return `Levels Gained: ${endLevel - startLevel}\n      Level Progress: ${finalPercentage * 100}%`;\n    },\n  }\n});\n\nexport default actions;\n","export default __webpack_public_path__ + \"static/media/hourglass.baa3c0e6.svg\";","export default __webpack_public_path__ + \"static/media/brain.5fc1c4e4.svg\";","export default __webpack_public_path__ + \"static/media/money.d39c5061.svg\";","export default __webpack_public_path__ + \"static/media/coffee.de84535d.svg\";","export default __webpack_public_path__ + \"static/media/stocks.037f2274.svg\";","import MoneyIcon from '../../icons/money.svg';\nimport CoffeeIcon from '../../icons/coffee.svg';\nimport StocksIcon from '../../icons/stocks.svg';\nimport {formatNumber} from '../../utils';\nimport CvIcon from '../../icons/cv.svg';\n\nconst actions = [{\n  type: \"intern\",\n  icon: CoffeeIcon,\n  explanation: `Get coffee for important people.\n  Earn $(salary)/s`,\n  unlockExplanation: \"Reach 25 Math Knowledge to unlock\",\n  isUnlocked: (state) => state.knowledge.math > 25,\n  act: (state, elapsed) => {\n    return {\n      career: {\n        ...state.career,\n        money: state.career.money + (elapsed * state.career.salary),\n      }\n    }\n  },\n  showCumulativeEffects: (startState, endState) => {\n    const startMoney = startState?.career?.money || 0;\n    const endMoney = endState?.career?.money || 0;\n    return `$${formatNumber(startMoney)} -> $${formatNumber(endMoney)}`;\n  },\n}, {\n  type: \"job search\",\n  explanation: `Look around for something better.\n  Raise Salary: $((history knowledge ^ .1) / 2.5)/s`,\n  icon: CvIcon,\n  unlockExplanation: \"Reach 150 History Knowledge to unlock\",\n  isUnlocked: (state) => state.knowledge.history > 150,\n  act: (state, elapsed) => {\n    return {\n      career: {\n        ...state.career,\n        salary: state.career.salary + (elapsed * (Math.pow(state.knowledge.history || 0, .1) / 2.5)),\n      },\n    }\n  },\n  showCumulativeEffects: (startState, endState) => {\n    const startSalary = startState?.career?.salary;\n    const endSalary = endState?.career?.salary;\n    return `$${formatNumber(startSalary)}/s -> $${formatNumber(endSalary)}/s`;\n  },\n}, {\n  type: \"invest\",\n  explanation: `Put your money in a fund, earn passive income.`,\n  icon: StocksIcon,\n  unlockExplanation: \"Reach 500 History Knowledge to unlock\",\n  isUnlocked: (state) => state.knowledge.history > 500,\n  instant: true,\n  act: (state, elapsed) => {\n    return {\n      spent: state.career.money,\n      career: {\n        ...state.career,\n        invested: (state.career.invested || 0) + state.career.money,\n        money: 0,\n      }\n    }\n  },\n  showCumulativeEffects: (startState) => {\n    const startMoney = startState?.spent || 0;\n    return `Invested $${startMoney}`;\n  },\n}, {\n  type: \"divest\",\n  explanation: \"Take your investment money back\",\n  icon: MoneyIcon,\n  unlockExplanation: \"Reach 500 History Knowledge to unlock\",\n  isUnlocked: (state) => state.knowledge.history > 500,\n  instant: true,\n  act: (state, elapsed) => {\n    return {\n      earned: state.career.invested,\n      career: {\n        ...state.career,\n        invested: 0,\n        money: (state.career.money || 0) + (state.career.invested || 0),\n      }\n    }\n  },\n  showCumulativeEffects: (startState) => {\n    return `Withdrew $${startState?.earned || 0}`;\n  },\n}];\n\nexport default actions;\n","export default __webpack_public_path__ + \"static/media/cv.bb9a49fe.svg\";","import TimeBackwardsIcon from '../../icons/time_backwards.svg';\nimport {formatNumber} from '../../utils';\nimport ShieldIcon from '../../icons/shield.svg';\nimport SwordIcon from '../../icons/sword.svg';\n\nconst actions = [{\n  type: \"Buy Time\",\n  instant: true,\n  icon: TimeBackwardsIcon,\n  explanation: `Spend all your money to get some time back.\n  Gain (1 + (math knowledge ^ .2))/$1\n  Only usable once per life per life`,\n  max: 1,\n  unlockExplanation: \"Earn $3 to unlock\",\n  // TODO: Add a isDisabled for after you already have one?\n  isUnlocked: (state) => state.career.money > 3,\n  act: (state, elapsed) => {\n    return {\n      spent: state.career.money,\n      timeLeft: state.timeLeft + (state.career.money * Math.pow(Math.max(state.knowledge.math || 0, 1), .2)),\n      career: {\n        ...state.career,\n        money: 0,\n      },\n      startTime: state.timeLeft,\n    }\n  },\n  showCumulativeEffects: (startState, endState) => {\n    const startTime = startState?.startTime || 0;\n    const endTime = startState?.timeLeft || 0;\n    const startMoney = startState?.spent || 0;\n    return `$${formatNumber(startMoney)} -> $0\n    ${formatNumber(startTime)}s -> ${formatNumber(endTime)}s`;\n  },\n}, {\n  type: \"Buy Sword\",\n  instant: true,\n  explanation: `Buy a cheap sword.\n  Spend $10, gain a sword. (attack + 8)`,\n  max: 1,\n  icon: SwordIcon,\n  unlockExplanation: \"Reach $10 to unlock\",\n  isUnlocked: (state) => state.career.money > 10,\n  act: (state, elapsed) => {\n    if (state.career.money < 10) {\n      return {\n        success: false,\n      };\n    }\n    return {\n      success: true,\n      unlocks: {\n        ...state.unlocks,\n        sword: true,\n      },\n      career: {\n        ...state.career,\n        money: state.career.money - 10\n      },\n      equipment: {\n        ...state.equipment,\n        sword: 1,\n      },\n      attributes: {\n        ...state.attributes,\n        attack: (state.attributes.attack || 0) + 8,\n      },\n    }\n  },\n  showCumulativeEffects: (startState, endState) => {\n    if (!startState) {\n      return \"\";\n    }\n    if (startState.success) {\n      return \"Spent $10, bought a sword\";\n    }\n    return \"Not enough $\";\n  },\n}, {\n  type: \"Buy Shield\",\n  instant: true,\n  explanation: `Buy a cheap shield.\n  Spend $25, gain a shield. (defense + 15)`,\n  max: 1,\n  icon: ShieldIcon,\n  unlockExplanation: \"Reach $25 to unlock\",\n  isUnlocked: (state) => state.career.money > 25,\n  act: (state, elapsed) => {\n    if (state.career.money < 25) {\n      return {\n        success: false,\n      }\n    }\n    return {\n      success: true,\n      unlocks: {\n        ...state.unlocks,\n        shield: true,\n      },\n      career: {\n        ...state.career,\n        money: state.career.money - 25\n      },\n      equipment: {\n        ...state.equipment,\n        shield: 1,\n      },\n      attributes: {\n        ...state.attributes,\n        defense: (state.attributes.defense || 0) + 8,\n      },\n    }\n  },\n  showCumulativeEffects: (startState, endState) => {\n    if (!startState) {\n      return \"\";\n    }\n    if (startState.success) {\n      return \"Spent $25, bought a shield\";\n    }\n    return \"Not enough $\";\n  },\n}];\n\nexport default actions;\n","export default __webpack_public_path__ + \"static/media/time_backwards.2cd04d1b.svg\";","export default __webpack_public_path__ + \"static/media/sword.0e7b1eb8.svg\";","export default __webpack_public_path__ + \"static/media/down.13cae114.svg\";","export default __webpack_public_path__ + \"static/media/left.48618941.svg\";","export default __webpack_public_path__ + \"static/media/up.571e14ce.svg\";","export default __webpack_public_path__ + \"static/media/right.0b846007.svg\";","const BOARD_SIZE = 10;\n\nconst spaceTypes = {\n  'none': {\n    type: 'none',\n    getEffects: (state) => ({}),\n  },\n  'enemy': {\n    type: 'enemy',\n    getEffects: (state, stats) => {\n      const enemyAttack = Math.max(0, stats.attack - (state.attributes.defense || 0));\n      const health = Math.max(0, state.attributes.health - enemyAttack);\n      const attack = Math.max(0, (state.attributes.attack || 0) - stats.defense);\n      const enemyHealth = health > 0 ? Math.max(0, stats.health - attack) : stats.health;\n      return {\n        state: {\n          ...state,\n          attributes: {\n            ...state.attributes,\n            health,\n          }\n        },\n        stats: {\n          health: enemyHealth,\n        }\n      }\n    },\n  },\n  'special': {\n    type: 'special',\n    getEffects: (state, stats) => {\n      const newKnowledge = {...state.knowledge};\n      Object.keys(stats.knowledge).forEach((subject) => {\n        console.log(\"Adding: \" + subject);\n        console.log(newKnowledge[subject] + \" \" + stats.knowledge[subject]);\n        newKnowledge[subject] = (newKnowledge[subject] || 0) + stats.knowledge[subject];\n        console.log(newKnowledge[subject]);\n      });\n      console.log(newKnowledge);\n      return {\n        state: {\n          knowledge: {\n            ...state.knowledge,\n            ...newKnowledge,\n          }\n        },\n        stats: {\n        },\n      };\n    }\n  },\n  'health': {\n    type: 'health',\n    getEffects: (state, stats) => {\n      const newHealth = Math.min(state.skills.health,\n                                 state.attributes.health + stats.health);\n      const used = newHealth - state.attributes.health;\n      const remaining = stats.health - used;\n      return {\n        state: {\n          ...state,\n          attributes: {\n            ...state.attributes,\n            health: newHealth,\n          }\n        },\n        stats: {\n          health: remaining,\n        },\n      }\n    },\n  },\n  'treasure': {\n    type: 'treasure',\n    getEffects: (state, stats) => {\n      return {\n        state: {\n          ...state,\n          timeLeft: state.timeLeft + (stats.time),\n          career: {\n            ...state.career,\n            money: state.career.money + (stats.money || 0),\n          }\n        },\n        stats: {\n          money: 0,\n        },\n      }\n    },\n  }\n}\n\nfunction getActionEffects(spaceType, state, stats) {\n  return spaceTypes[spaceType].getEffects(state, stats);\n}\n\nfunction createEmpty() {\n  return {\n    type: 'none',\n    getEffects: (state, stats) => ({}),\n  }\n}\n\nfunction createEnemy(attack, defense, health) {\n  return {\n    type: 'enemy',\n    stats: {\n      attack: attack,\n      defense: defense,\n      health: health,\n    },\n  }\n}\n\nfunction createTreasure(money, time) {\n  return {\n    type: 'treasure',\n    stats: {money, time}\n  }\n}\n\nfunction createHealthSupply(health) {\n  return {\n    type: 'health',\n    stats: {\n      health: health,\n    },\n  }\n}\n\nfunction createSpecial(i, j) {\n  if (j < 2) {\n    return {\n      type: 'special',\n      stats: {\n        knowledge: {\n          math: 100,\n        }\n      },\n    }\n  }\n  if (j < 5) {\n    return {\n      type: 'special',\n      stats: {\n        knowledge: {\n          science: 200,\n        }\n      },\n    }\n  }\n  if (j < 8) {\n    return {\n      type: 'special',\n      stats: {\n        knowledge: {\n          history: 450,\n        }\n      },\n    }\n  }\n  return {\n    type: 'special',\n    stats: {\n      knowledge: {\n        math: 875,\n      }\n    },\n  }\n}\n\nconst map0 = [\n  ['n', 'e', 't', 's', 'e', 'n', 'e', 'n', 'e', 't'],\n  ['e', 's', 'e', 'e', 'n', 'e', 't', 'e', 'n', 'e'],\n  ['n', 'h', 't', 'e', 'n', 'n', 'e', 'n', 'n', 'e'],\n  ['t', 'n', 's', 'n', 'n', 'e', 'h', 'e', 'n', 'n'],\n  ['n', 'n', 'e', 'h', 'n', 's', 'n', 'e', 'n', 'n'],\n  ['h', 'e', 't', 'e', 'e', 'e', 'h', 'n', 'n', 'n'],\n  ['e', 'n', 'n', 't', 'e', 'n', 'n', 'n', 't', 'e'],\n  ['n', 'e', 'h', 'n', 'n', 's', 'h', 'e', 'e', 'e'],\n  ['n', 'e', 'n', 'n', 'e', 'e', 'n', 'n', 'n', 'n'],\n  ['e', 'e', 'e', 'e', 's', 'e', 'e', 'e', 'h', 't'],\n];\n\nfunction getNewSpace(i, j) {\n  switch (map0[i][j]) {\n    case 'n':\n      return createEmpty();\n    case 'e':\n      const attack = i + j;\n      const defense = i + j;\n      const health = (i * 3) + j;\n      return createEnemy(attack, defense, health);\n    case 't':\n      let money = 0;\n      let time = 0;\n      if (i % 2 === 0) {\n        money = (i + 1) * (j + 1) * 2;\n      } else {\n        time = (i + 1) * (j + 1) * 3;\n      }\n      return createTreasure(money, time);\n    case 'h':\n      const amt = 1 + j * 2;\n      return createHealthSupply(amt);\n    case 's':\n      return createSpecial(i, j);\n    default:\n      return createEmpty();\n  }\n}\n\nfunction newBoard() {\n  const board = []\n  for (let i = 0; i < BOARD_SIZE; i++) {\n    const row = [];\n    for (let j = 0; j < BOARD_SIZE; j++) {\n      row.push(getNewSpace(i, j));\n    }\n    board.push(row);\n  }\n  return board;\n}\n\nfunction newBoardTracker() {\n  const board = []\n  for (let i = 0; i < BOARD_SIZE; i++) {\n    const row = [];\n    for (let j = 0; j < BOARD_SIZE; j++) {\n      // The player starts in the first square, so its explored already.\n      row.push(i === 0 && j === 0);\n    }\n    board.push(row);\n  }\n  return board;\n}\n\nexport {newBoard, getActionEffects, newBoardTracker};\n","import DownIcon from '../../icons/down.svg';\nimport LeftIcon from '../../icons/left.svg';\nimport UpIcon from '../../icons/up.svg';\nimport RightIcon from '../../icons/right.svg';\nimport {getActionEffects} from '../board';\n\nconst directions = [{\n  name: \"Right\",\n  move: ({x, y}) => ({x: x+1, y}),\n  icon: RightIcon,\n}, {\n  name: \"Down\",\n  move: ({x, y}) => ({x, y: y-1}),\n  icon: DownIcon,\n}, {\n  name: \"Left\",\n  move: ({x, y}) => ({x: x-1, y}),\n  icon: LeftIcon,\n}, {\n  name: \"Up\",\n  move: ({x, y}) => ({x, y: y+1}),\n  icon: UpIcon,\n}];\n\nconst actions = directions.map((direction) => ({\n  type: `Move ${direction.name}`,\n  explanation: `Move ${direction.name}.\n  Take 1 step/s.`,\n  icon: direction.icon,\n  unlockExplanation: \"Reach attack of 10 to unlock.\",\n  isUnlocked: (state) => state.attributes.attack > 10,\n  act: (state, elapsed) => {\n    const newSteps = state.adventure.steps + elapsed / 1;\n    let stepsTaken = Math.floor(newSteps) - Math.floor(state.adventure.steps);\n    let position = state.adventure.position;\n    let effects = {};\n    let newBoard = state.adventure.board;\n    while (stepsTaken > 0) {\n      const boardSpot = state.adventure.board[position.y][position.x];\n      const actionEffects = getActionEffects(boardSpot.type, state, boardSpot.stats);\n      effects = {...effects, ...actionEffects.state};\n      let newPosition = position;\n      if (actionEffects.stats?.health && boardSpot.type === 'enemy') {\n      } else {\n        let newPosition0 = direction.move(position);\n        if (newPosition0.x < 0 || newPosition0.x >= 10 || newPosition0.y < 0 || newPosition0.y >= 10) {\n        } else {\n          newPosition = newPosition0;\n        }\n      }\n      stepsTaken -= 1;\n      const boardTracker = state.boardTracker.map((row, y) => row.map((space, x) => {\n        if (x === newPosition.x && y === newPosition.y) {\n          return true;\n        }\n        return space;\n      }));\n      const oldPosition = position;\n      newBoard = state.adventure.board.map((row, y) => row.map((space, x) => {\n        if (space.stats && x === oldPosition.x && y === oldPosition.y) {\n          return {\n            ...space,\n            stats: {\n              ...space.stats,\n              ...actionEffects.stats,\n            },\n          }\n        }\n        return space;\n      }));\n      position = newPosition;\n      effects = {...effects, boardTracker, board: newBoard};\n    }\n    return {\n      ...effects,\n      adventure: {\n        ...state.adventure,\n        ...effects.adventure,\n        position,\n        steps: newSteps,\n        board: newBoard,\n      }\n    }\n  },\n}));\n\nexport default actions;\n\n","import school from './school'\nimport training from './training';\nimport research from './research';\nimport business from './business';\nimport store from './store';\nimport adventure from './adventure';\n\nconst actions = [{\n  name: \"School\",\n  actions: school,\n}, {\n  name: \"Business\",\n  actions: business,\n}, {\n  name: \"Store\",\n  actions: store,\n}, {\n  name: \"Research Lab\",\n  actions: research,\n}, {\n  name: \"Training Gym\",\n  actions: training,\n}, {\n  name: \"Adventure\",\n  actions: adventure,\n}];\n\nconst allActions = actions.map((category) => category.actions).flat();\n\nconst actionMap = new Map();\nconst unlockMap = new Map();\nconst effectsMap = new Map();\nallActions.forEach((action) => {\n  actionMap.set(action.type, action.act)\n  effectsMap.set(action.type, action.showCumulativeEffects);\n  if (action.isUnlocked) {\n    unlockMap.set(action.type, action.isUnlocked);\n  }\n});\n\nexport {actions, actionMap, effectsMap, unlockMap};\n","import {actionMap, effectsMap, unlockMap} from './actions/index';\nimport {newBoard, newBoardTracker} from './board';\n\n// TODO: this means that action names have to be unique .. you should namespace them somehow?\nfunction setUnlocks(state) {\n  let newUnlocks = {};\n  for (let type of unlockMap.keys()) {\n    newUnlocks = {\n      ...newUnlocks,\n      [type]: state.unlocks[type] || unlockMap.get(type)(state),\n    };\n  }\n  return {\n    ...state,\n    unlocks: {\n      ...state.unlocks,\n      ...newUnlocks,\n    }\n  }\n}\n\nfunction doAction(action, state, time) {\n  const act = actionMap.get(action.type);\n  return act(state, time);\n}\n\nfunction showEffects(actionItem) {\n  const effectsFunc = effectsMap.get(actionItem.type);\n  return effectsFunc ? effectsFunc(actionItem.initEffects, actionItem.endEffects) : '';\n}\n\nconst initialDay = {\n  timeLeft: 5,\n  actionIndex: 0,\n  knowledge: {\n    math: 0,\n  },\n  career: {\n    money: 0,\n    salary: 1,\n  },\n  researchProgress: {\n    Time: 0,\n    Memory: 0,\n  },\n  adventure: {\n    steps: 0,\n    position: {\n      x: 0,\n      y: 0,\n    },\n    board: newBoard(),\n  },\n  equipment: {},\n  attributes: {},\n}\n\nconst useSave = true;\nconst saveGame = useSave ? localStorage.getItem('save-game') : null;\nconst initialState = saveGame ? JSON.parse(saveGame) : {\n  day: 0,\n  currentDay: [],\n  plan: [],\n  settings: {\n    repeatLast: true,\n    paused: false,\n  },\n  wisdom: {\n    math: 0,\n  },\n  researchTotals: {\n    Time: 0,\n  },\n  skills: {\n    attack: 0,\n    defense: 0,\n    health: 5,\n  },\n  unlocks: {\n    math: true,\n  },\n  boardTracker: newBoardTracker(),\n  ...initialDay,\n};\n\nfunction newDay(state) {\n  const nextDayKnowledge = {};\n  Object.keys(state.knowledge).forEach((subject) => {\n    nextDayKnowledge[subject] = state.knowledge[subject] * .01 * (state.researchTotals.Memory || 0);\n  });\n  const day = {\n    ...state,\n    day: state.day + 1,\n    actionIndex: 0,\n    currentDay: state.plan.map((action) => ({\n      type: action.type,\n      timeLeft: action.time,\n      totalTime: action.time,\n      startState: null,\n      endState: null,\n    })),\n    ...initialDay,\n    attributes: {\n      ...initialDay.attributes,\n      health: state.skills.health,\n    },\n    knowledge: nextDayKnowledge,\n    timeLeft: initialDay.timeLeft + state.researchTotals.Time,\n  };\n  day.adventure.board = newBoard();\n  return day;\n}\n\nfunction update(state, elapsed) {\n  if (state.currentDay.length === 0 && state.plan.length === 0) {\n    return state;\n  }\n  const timeLeft = Math.max(0, state.timeLeft - elapsed);\n  let curAction = state.currentDay[state.actionIndex];\n  let actionTimeLeft = curAction ? Math.max(0, curAction.timeLeft - elapsed) : 0;\n  let actionIndex = state.actionIndex;\n  if (timeLeft <= 0 || (!state.settings.repeatLast && !curAction) || state.currentDay.length === 0) {\n    return newDay(state);\n  } else if (state.settings.repeatLast && !curAction) {\n    curAction = state.currentDay[state.actionIndex - 1];\n    if (curAction.totalTime === 0) {\n      return newDay(state);\n    }\n    actionIndex -= 1;\n  }\n  if (state.attributes.health <= 0) {\n    return newDay(state);\n  }\n  const actionEffects = doAction(curAction, state, elapsed);\n  const investmentGains = (state.career.invested || 0) * elapsed * .05\n  const newCareer = actionEffects.career ? {...actionEffects.career} : {...state.career};\n  newCareer.invested = (newCareer.invested || 0) + investmentGains;\n  const newState = {\n    ...state,\n    timeLeft: state.timeLeft - elapsed,\n    ...actionEffects,\n    career: newCareer,\n    currentDay: state.currentDay.map((item, index) => {\n      if (index === actionIndex) {\n        return {\n          ...item,\n          timeLeft: actionTimeLeft,\n          initEffects: item.initEffects || doAction(curAction, state, 0),\n          endEffects: {\n            ...actionEffects,\n          }\n        }\n      }\n      return item;\n    }),\n    actionIndex: actionTimeLeft > 0 ? state.actionIndex : actionIndex + 1,\n  }\n  return setUnlocks(newState);\n}\n\nexport {update, initialState, initialDay, newDay, showEffects};\n","import React from 'react';\nimport {formatNumber} from '../utils';\n\nexport default function Progress(props) {\n  const {amt, total, label, showNumber} = props;\n  return (\n    <div style={{position: 'relative', height: '100%'}}>\n      <span style={{\n        backgroundColor: 'red',\n        width: `${amt / total * 100}%`,\n        height: '100%',\n        display: 'block',\n        float: 'right',\n      }}/>\n      <div style={{position: 'absolute', top: 0, bottom: 0, left: 0, right: 0, textAlign: 'center'}}>{`${showNumber ? formatNumber(amt) : ''} ${label}`}</div>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport Progress from './Progress.jsx';\nimport {initialDay} from '../game/main';\n\nexport default function Header(props) {\n  const {state} = props;\n  // TODO: the total here needs to change (what should it be???)\n  return (\n    <div className=\"header\">\n      <Progress amt={state.timeLeft} total={state.researchTotals.Time + initialDay.timeLeft} showNumber label=\"s\" />\n    </div>\n  );\n}\n","import React from 'react';\nimport './Title.css';\n\nexport default function Title(props) {\n  const {name} = props;\n  return (\n    <h4 className=\"title\">{name}</h4>\n  );\n}\n","import React from 'react';\nimport Title from './Title.jsx';\nimport Progress from './Progress.jsx';\nimport './AdventureMap.css';\n\nexport default function AdventureMap(props) {\n  const {state} = props;\n  // TODO: move to board.js\n  const getSpaceText = (rowIndex, colIndex) => {\n    let spaceText = '';\n    const explored = state.boardTracker[rowIndex][colIndex];\n    if (!explored) {\n      return spaceText;\n    }\n    const spot = state.adventure.board[rowIndex][colIndex];\n    if (spot.stats) {\n      // TODO: move to attr of board type, make a getter\n      if (spot.stats.attack) {\n        spaceText +=  `A: ${spot.stats.attack}, D: ${spot.stats.defense}, H: ${spot.stats.health}`;\n      } if (spot.stats.money){\n        spaceText += `$${spot.stats.money}`;\n      } if (spot.stats.health && !spot.stats.attack) {\n        spaceText += `${spot.stats.health} H`\n      } if (spot.type === 'special' && spot.stats.knowledge) {\n        Object.keys(spot.stats.knowledge).forEach((subject) => {\n          spaceText += `${spot.stats.knowledge[subject]} ${subject}`;\n        });\n      } if (spot.stats.time) {\n        spaceText += `${spot.stats.time} s`;\n      }\n    }\n    return spaceText;\n  };\n\n  const getPlayerText = (rowIndex, colIndex) => {\n    if (rowIndex === state.adventure.position.y && colIndex === state.adventure.position.x) {\n      return 'X';\n    }\n    return '';\n  };\n  return (\n    <div className=\"adventure\">\n      {state.unlocks[\"Move Up\"] ? (\n        <>\n      <Title name=\"Adventure Map\" />\n      <div style={{height: 20}}>\n        <Progress amt={state.adventure.steps % 1} total={1} label=\"% Steps\"/>\n      </div>\n      <div className=\"adventure-map\">\n        {state.adventure.board.slice().reverse().map((row, rIndex) => row.map((cell, colIndex) => {\n          const rowIndex = state.adventure.board.length - rIndex - 1;\n          return (\n          <div key={`${rowIndex},${colIndex}`} className={`${cell.type} ${state.boardTracker[rowIndex][colIndex] ? \"\" : \"unexplored\"}`}>\n            <div>\n            {getSpaceText(rowIndex, colIndex)}\n            </div>\n            <div>\n            {getPlayerText(rowIndex, colIndex)}\n            </div>\n          </div>\n          );\n        }))}\n      </div>\n        </>\n      ) : \"\"}\n    </div>\n  );\n}\n","import React from 'react';\nimport Title from './Title.jsx';\nimport {formatNumber} from '../utils';\nimport Progress from './Progress.jsx';\n\nexport default function TrainingAttributes(props) {\n  const {state} = props;\n  return (\n    <div className=\"training\">\n      {state.unlocks.attack ? (\n        <>\n      <Title name=\"Attributes\"/>\n        <div>\n          <div>{`Attack Rank: ${formatNumber(state.attributes.attack || 0)}`}</div>\n          <div>{`Attack Skills: ${formatNumber(state.skills.attack || 0)}`}</div>\n        </div>\n        <div>\n          <div>{`Defense Rank: ${formatNumber(state.attributes.defense || 0)}`}</div>\n          <div>{`Defense Skills: ${formatNumber(state.skills.defense || 0)}`}</div>\n        </div>\n        <div style={{height: 20}}>\n          <Progress showNumber amt={state.attributes.health} total={state.skills.health} label=\"Health\" />\n        </div>\n      </>) : \"\" }\n    </div>\n  );\n}\n","import React from 'react';\nimport Title from './Title.jsx';\n\nexport default function ResearchDiscoveries(props) {\n  const {state} = props;\n  return (\n    <div className=\"research\">\n      {state.unlocks[\"Research Time\"] ? (\n      <>\n      <Title name=\"Research\"/>\n      {Object.keys(state.researchTotals).map((research, index) => {\n        return (\n          <div key={index}> \n            <div>{research}</div>\n            <div>{`Level: ${state.researchTotals[research]}`}</div>\n            <div style={{backgroundColor: 'white', height: 20}}><span style={{backgroundColor: 'blue', width: `${(state.researchProgress[research] * 100) % 100}%`, height: 20, display: 'block', float: 'right'}}/></div>\n          </div>\n        );\n      })}\n            </>\n      ) : '' }\n    </div>\n  );\n}\n","import React from 'react';\nimport Title from './Title.jsx';\n\nexport default function Equipment(props) {\n  const {state} = props;\n  return (\n    <div className=\"equipment\">\n      {state.unlocks.sword > 0 ? (\n        <>\n      <Title name=\"Equipment\"/>\n      {\n        Object.keys(state.equipment).map((piece, index) => {\n          return (<div key={index}>{`${piece}: ${state.equipment[piece]}`}</div>)\n        })\n      }\n            </>\n      ) : ''}\n    </div>\n  );\n}\n","import React from 'react';\nimport Title from './Title.jsx';\nimport {formatNumber} from '../utils';\n\nexport default function Business(props) {\n  const {state} = props;\n  return (\n    <div className=\"business\">\n      {state.unlocks.intern ? (\n        <>\n          <Title name=\"Business\" />\n          <div>{`Money: $${formatNumber(state.career.money)}`}</div>\n          <div>{`Salary: $${formatNumber(state.career.salary)}/s`}</div>\n          <div>{`Invested: $${formatNumber(state.career.invested)}`}</div>\n        </>\n      ) : ''}\n    </div>\n  );\n}\n","import React from 'react';\nimport Progress from './Progress.jsx';\nimport Title from './Title.jsx';\n\nfunction getNext(amt) {\n  return Math.pow(10, Math.floor(Math.log10(amt)) + 1);\n}\n\nexport default function Schooling(props) {\n  const {state} = props;\n  return (\n    <div className=\"schooling\">\n      <Title name=\"Schooling\" />\n      {\n        Object.keys(state.wisdom).map((subject, index) => {\n          const amt = state.knowledge[subject] || 0;\n          const next = getNext(amt);\n          const wisdom = state.wisdom[subject] || 0;\n          const nextWisdom = getNext(wisdom);\n          return (\n            <div key={index}>\n              <div>{subject}</div>\n              <div style={{height: 20}}>\n              <Progress showNumber amt={amt} total={next} label=\"\"/>\n              </div>\n              <div style={{height: 20}}>\n              <Progress showNumber amt={wisdom} total={nextWisdom} label=\"\"/>\n              </div>\n            </div>\n          );\n        })\n      }\n    </div>\n  );\n}\n","import React from 'react';\nimport {showEffects} from '../game/main';\nimport Title from './Title.jsx';\nimport Progress from './Progress.jsx';\nimport './CurrentDay.css';\n\nexport default function CurrentDay(props) {\n  const {state, dispatch} = props;\n  const {currentDay, settings, actionIndex} = state;\n  const onSetRepeat = (evt) => {\n    dispatch({type: 'set-repeat-last', repeat: evt.target.checked});\n  }\n  const onClickReset = () => {\n    dispatch({type: 'reset-day'});\n  }\n  const togglePauseResume = () => {\n    dispatch({type: 'pause-resume', paused: !settings.paused});\n  }\n  return (\n    <div className=\"current\">\n      <div className=\"container\">\n      <Title name=\"Current Day\"/>\n      <div className=\"day-container\">\n      {currentDay.map((item, index) => {\n        const isActive = actionIndex === index || (actionIndex === currentDay.length && index + 1 === actionIndex);\n        return (\n          <div key={index} className={`progress-container ${isActive ? \"active\" : \"\"}`}>\n            <Progress amt={item.timeLeft} total={item.totalTime} label={`${item.type} (${item.totalTime})`}/>\n            <span className=\"effects-tooltip\">{showEffects(item)}</span>\n          </div>\n        );\n      })}\n      </div>\n      <div className=\"day-actions\">\n        <input onChange={onSetRepeat} checked={settings.repeatLast} type=\"checkbox\" id=\"repeat\" name=\"repeat\" value=\"repeat\"/>\n        <label htmlFor=\"repeat\">Repeat Last Action</label>\n        <button onClick={onClickReset}>Start New Day</button>\n        <button onClick={togglePauseResume}>{settings.paused ? \"Resume\" : \"Pause\"}</button>\n      </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport './ActionBankColumn.css';\n\nexport default function ActionBankColumn(props) {\n  const {category, dispatch, state} = props;\n  const onChooseAction = (action) => {\n    dispatch({type: \"add-action-to-plan\", action});\n  }\n  const firstUnlocked = state.unlocks[category.actions[0].type];\n  return (\n    <div className=\"super-container\">\n      <div className={`action-container ${firstUnlocked ? \"cat-unlocked\" : \"cat-locked\"}`} >\n        <div className=\"action-title\">{category.name}</div>\n          {category.actions.map((action, index) => {\n            const isUnlocked = state.unlocks[action.type];\n            return (\n          <div key={index} className={`button-container ${isUnlocked ? \"unlocked\" : \"locked\"}`}>\n            <button key={index} disabled={!isUnlocked} className=\"action-button\" onClick={() => onChooseAction(action)} >\n              <img className=\"action-image\" src={action.icon} alt={action.type}/>\n              <span className=\"action-tooltip unlocked-tooltip\">{action.explanation}</span>\n              <span className=\"action-tooltip locked-tooltip\">{action.unlockExplanation}</span>\n            </button>\n          </div>\n        )})}\n        <span className=\"action-tooltip category-tooltip\">{category.actions[0].unlockExplanation}</span>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ActionBankColumn from './ActionBankColumn.jsx';\nimport Title from './Title.jsx';\nimport {actions} from '../game/actions/index';\n\nexport default function ActionBank(props) {\n  const {dispatch, state} = props;\n  return (\n    <div className=\"actions\">\n      <Title name=\"Action Bank\"/>\n      <div style={{display: 'flex'}}>\n        {actions.map((category, index) => <ActionBankColumn key={index} category={category} dispatch={dispatch} state={state}/>)}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport Title from './Title.jsx';\nimport './PlanningItem.css';\n\nexport default function PlanningItem(props) {\n  const {activity, setItemTime, dispatch, index} = props;\n  const onDelete = () => {\n    dispatch({type: 'delete-action', index});\n  }\n  return (\n    <div className=\"planning-item-container\">\n      <div className=\"close\"><button className=\"close-button\" onClick={onDelete}>X</button></div>\n      <Title name={activity.type}/>\n      <img src={activity.icon} alt={activity.type}/>\n      {activity.instant ? '' : \n          <div>\n            <input style={{width: '2.5em'}} min=\"0\" max=\"99\" type=\"number\" value={activity.time} onChange={(evt) => setItemTime(evt.target.value)}/>s</div>}\n    </div>\n\n  );\n}\n","import React, {useState} from 'react';\nimport Title from './Title.jsx';\nimport PlanningItem from './PlanningItem.jsx';\nimport './Planning.css';\n\nconst initialDragState = {\n  draggedFrom: null,\n  draggedTo: null,\n  isDragging: false,\n  originalOrder: [],\n  updatedOrder: [],\n}\n\nexport default function Planning(props) {\n  const {dispatch, plan} = props;\n  const [dragAndDrop, setDragAndDrop] = useState(initialDragState);\n  const onDragStart = (evt) => {\n    const initPos = Number(evt.currentTarget.dataset.position);\n    setDragAndDrop({\n      ...dragAndDrop,\n      draggedFrom: initPos,\n      isDragging: true,\n      originalOrder: plan\n    });\n  };\n\n  const onDragOver = (evt) => {\n    evt.preventDefault();\n    let newList = dragAndDrop.originalOrder;\n    const draggedFrom = dragAndDrop.draggedFrom;\n    const draggedTo = Number(evt.currentTarget.dataset.position);\n    const itemsDragged = newList[draggedFrom];\n    const remainingItems = newList.filter((item, index) => index !== draggedFrom);\n    newList = [\n      ...remainingItems.slice(0, draggedTo),\n      itemsDragged,\n      ...remainingItems.slice(draggedTo),\n    ];\n    if (draggedTo !== dragAndDrop.draggedTo) {\n      setDragAndDrop({\n        ...dragAndDrop,\n        updatedOrder: newList,\n        draggedTo: draggedTo,\n      });\n    }\n  };\n\n  const onDrop = (evt) => {\n    dispatch({type: 'set-plan', plan: dragAndDrop.updatedOrder});\n    setDragAndDrop({\n      ...dragAndDrop,\n      draggedFrom: null,\n      draggedTo: null,\n      isDragging: false,\n    });\n  };\n\n  const onDragLeave = () => {\n    setDragAndDrop({\n      ...dragAndDrop,\n      draggedTo: null\n    });\n  };\n  const setItemTime = (time, index) => {\n    let newPlan = [...plan];\n    newPlan[index].time = time\n    dispatch({type: 'set-plan', plan: newPlan});\n  }\n  return (\n    <div className=\"planning\">\n      <Title name=\"Planning\"/>\n      <div style={{display: 'flex', overflowX: 'scroll', flexGrow: 1, paddingTop: 10}}>\n      {plan.map((item, index) => {\n        return ( <div className=\"activity\"\n          key={index}\n          draggable\n          data-position={index}\n          onDragStart={onDragStart}\n          onDragOver={onDragOver}\n          onDrop={onDrop}\n          onDragLeave={onDragLeave}\n        >\n            <PlanningItem index={index} dispatch={dispatch} activity={item} setItemTime={(time) => setItemTime(time, index)}/>\n        </div>\n        )\n      })}\n      </div>\n    </div>\n  );\n}\n","import React, {useEffect, useRef, useReducer} from 'react';\nimport {update, initialState, newDay} from '../game/main';\nimport Header from './Header.jsx';\nimport AdventureMap from './AdventureMap.jsx';\nimport TrainingAttributes from './TrainingAttributes.jsx';\nimport ResearchDiscoveries from './ResearchDiscoveries.jsx';\nimport Equipment from './Equipment.jsx';\nimport Business from './Business.jsx';\nimport Schooling from './Schooling.jsx';\nimport CurrentDay from './CurrentDay.jsx';\nimport ActionBank from './ActionBank.jsx';\nimport Planning from './Planning.jsx';\nimport './MainGame.css'\n\nconst FPS = 30;\nconst TICK_SPEED = 1000 / FPS;\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'save':\n      try {\n        localStorage.setItem('save-game', JSON.stringify(state));\n        console.log(\"Game Saved\");\n      } catch (error) {\n        // TODO: surface error? Make sure this doesn't happen?\n        console.log(\"ERROR: \");\n        console.log(error);\n      }\n      return state;\n    case 'set-repeat-last':\n      return {\n        ...state,\n        settings: {\n          ...state.settings,\n          repeatLast: action.repeat\n        }\n      }\n    case 'reset-day':\n      return newDay(state);\n    case 'update':\n      return update(state, action.elapsed);\n    case 'pause-resume':\n      return {\n        ...state,\n        settings: {\n          ...state.settings,\n          paused: action.paused,\n        }\n      }\n    case 'set-plan':\n      return {\n        ...state,\n        plan: action.plan,\n      }\n    case 'add-action-to-plan':\n      const same = state.plan.reduce((total, item) => total + Number(item.type === action.action.type), 0)\n      const canAdd = (!action.action.max) || (same < action.action.max);\n      if (!canAdd) {\n        return state;\n      }\n      return {\n        ...state,\n        plan: [...state.plan, {\n          ...action.action,\n          time: action.action.instant ? 0 : 1,\n        }],\n      }\n    case 'delete-action':\n      return {\n        ...state,\n        plan: [\n          ...state.plan.slice(0, action.index),\n          ...state.plan.slice(action.index + 1),\n        ],\n      }\n    default:\n      return state;\n  }\n};\n\nconst SAVE_INTERVAL = 10 * 1000;\n\nfunction useInterval(callback: () => void, delay: number | null) {\n  const savedCallback = useRef(callback)\n\n  // Remember the latest callback if it changes.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    // Don't schedule if no delay is specified.\n    if (delay === null) {\n      return\n    }\n\n    const id = setInterval(() => savedCallback.current(), delay)\n\n    return () => clearInterval(id)\n  }, [delay])\n}\n\nexport default function MainGame() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const prevTime = useRef(performance.now());\n  \n  useInterval(() => {\n    const newTime = performance.now();\n    const elapsed = newTime - prevTime.current;\n    prevTime.current = newTime;\n    if (!state.settings.paused) {\n      dispatch({type: 'update', elapsed: elapsed / 1000});\n    }\n  }, TICK_SPEED);\n  useInterval(() => {\n    dispatch({type: 'save'});\n  }, SAVE_INTERVAL);\n  return (\n    <div className=\"root\">\n      <Header state={state} />\n      <Schooling state={state} />\n      <ResearchDiscoveries state={state} />\n      <Business state={state} />\n      <Equipment state={state} />\n      <TrainingAttributes state={state} />\n      <AdventureMap state={state} />\n      <CurrentDay dispatch={dispatch} state={state} />\n      <Planning plan={state.plan} dispatch={dispatch}/>\n      <ActionBank state={state} dispatch={dispatch} />\n    </div>\n  );\n}\n","import MainGame from './components/MainGame.jsx';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainGame />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}